[gd_scene load_steps=8 format=3 uid="uid://dfwyjyjoj3g8t"]

[ext_resource type="Script" uid="uid://5g0eflln0yup" path="res://scripts/station_creation.gd" id="2_bpb2d"]
[ext_resource type="Script" uid="uid://b6e7j3fgqvrtr" path="res://scripts/area-creation.gd" id="2_q4dxd"]
[ext_resource type="Script" uid="uid://uchro8mius6d" path="res://scripts/camera_movement.gd" id="2_wg34b"]
[ext_resource type="PackedScene" uid="uid://bcll0qejjkfl4" path="res://station.tscn" id="3_6vms3"]
[ext_resource type="Script" uid="uid://dycew0hxvcv3j" path="res://scripts/route_creation.gd" id="5_lm6jf"]
[ext_resource type="PackedScene" uid="uid://cfduee8lnq0v2" path="res://HUD.tscn" id="6_01tkc"]

[sub_resource type="GDScript" id="GDScript_1ainy"]
script/source = "extends Node2D

var line_script = \"res://scripts/lines.gd\"

func create_map(map_data):
	print(\"rendering map...\")
	const map_scale = 100
	for way in map_data:
		var data = map_data[way]
		var line = Line2D.new()
		line.width = 2
		line.default_color = Color(0.7, randf_range(0, 1), randf_range(0, 1))
		for i in range(1, len(data), 2):
			line.add_point(Vector2((data[i] / map_scale) * 2, (data[i + 1] / map_scale) * 2))
		add_child(line)
"

[node name="level" type="Node2D"]

[node name="OSMWays" type="Node2D" parent="."]
visible = false
script = SubResource("GDScript_1ainy")

[node name="Areas" type="Node2D" parent="."]
position = Vector2(0, -1)
script = ExtResource("2_q4dxd")

[node name="Paths" type="Node2D" parent="."]
script = ExtResource("5_lm6jf")

[node name="Stations" type="Node2D" parent="."]
position = Vector2(0, -324)
script = ExtResource("2_bpb2d")

[node name="StationLeft" parent="Stations" instance=ExtResource("3_6vms3")]
position = Vector2(-256, 324)

[node name="StationRight" parent="Stations" instance=ExtResource("3_6vms3")]
position = Vector2(256, 324)

[node name="Hud" parent="." instance=ExtResource("6_01tkc")]

[node name="Camera2D" type="Camera2D" parent="."]
script = ExtResource("2_wg34b")
